# test read speads and memory overhead for various datacube structures
using Zarr

n = 100;
r = rand(1:833, n);
c = rand(1:833, n);

print("row = ")
println(r)

print("col = ")
println(c)


path2cube = "http://its-live-data.s3.amazonaws.com/datacubes/v02/N60W040/ITS_LIVE_vel_EPSG3413_G0120_X-150000_Y-2250000.zarr";
println(path2cube);
dc = Zarr.zopen(path2cube)
@time for i = 1:n; dc["v"][r[i],c[i],:]; end


path2cube = "http://its-live-data.s3.amazonaws.com/test_datacubes/forAlex/ITS_LIVE_vel_EPSG3413_G0120_X-150000_Y-2250000_rechunked_t_25730_xy_10_test.zarr";
println(path2cube)
dc = Zarr.zopen(path2cube);
@time for i = 1:n; dc["v"][r[i],c[i],:]; end

path2cube = "http://its-live-data.s3.amazonaws.com/test_datacubes/forAlex/ITS_LIVE_vel_EPSG3413_G0120_X-150000_Y-2250000_rechunked_t_25730_xy_5_test.zarr";
println(path2cube)
dc = Zarr.zopen(path2cube);
@time for i = 1:n; dc["v"][r[i],c[i],:]; end

path2cube = "http://its-live-data.s3.amazonaws.com/test_datacubes/forAlex/ITS_LIVE_vel_EPSG3413_G0120_X-150000_Y-2250000_rechunked_t_25730_xy_1_test.zarr";
println(path2cube)
dc = Zarr.zopen(path2cube);
@time for i = 1:n; dc["v"][r[i],c[i],:]; end
